//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;
using RightsManagementSystem.Model;

namespace RightsManagementSystem.DAL
{
    public partial class RightsManagementSystemEntities : ObjectContext
    {
        public const string ConnectionString = "name=RightsManagementSystemEntities";
        public const string ContainerName = "RightsManagementSystemEntities";
    
        #region Constructors
    
        public RightsManagementSystemEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public RightsManagementSystemEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public RightsManagementSystemEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // 创建代理需要使用 ProxyDataContractResolver 和
            // 可允许延迟加载，这可以在序列化期间展开加载图。
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet 属性
    
        public ObjectSet<SysPerson> SysPerson
        {
            get { return _sysPerson  ?? (_sysPerson = CreateObjectSet<SysPerson>("SysPerson")); }
        }
        private ObjectSet<SysPerson> _sysPerson;
    
        public ObjectSet<SysPosition> SysPosition
        {
            get { return _sysPosition  ?? (_sysPosition = CreateObjectSet<SysPosition>("SysPosition")); }
        }
        private ObjectSet<SysPosition> _sysPosition;
    
        public ObjectSet<SysPersonToPosition> SysPersonToPosition
        {
            get { return _sysPersonToPosition  ?? (_sysPersonToPosition = CreateObjectSet<SysPersonToPosition>("SysPersonToPosition")); }
        }
        private ObjectSet<SysPersonToPosition> _sysPersonToPosition;
    
        public ObjectSet<SysRole> SysRole
        {
            get { return _sysRole  ?? (_sysRole = CreateObjectSet<SysRole>("SysRole")); }
        }
        private ObjectSet<SysRole> _sysRole;
    
        public ObjectSet<SysPersonOrPositionToRole> SysPersonOrPositionToRole
        {
            get { return _sysPersonOrPositionToRole  ?? (_sysPersonOrPositionToRole = CreateObjectSet<SysPersonOrPositionToRole>("SysPersonOrPositionToRole")); }
        }
        private ObjectSet<SysPersonOrPositionToRole> _sysPersonOrPositionToRole;
    
        public ObjectSet<SysDepartment> SysDepartment
        {
            get { return _sysDepartment  ?? (_sysDepartment = CreateObjectSet<SysDepartment>("SysDepartment")); }
        }
        private ObjectSet<SysDepartment> _sysDepartment;
    
        public ObjectSet<SysRoleToRights> SysRoleToRights
        {
            get { return _sysRoleToRights  ?? (_sysRoleToRights = CreateObjectSet<SysRoleToRights>("SysRoleToRights")); }
        }
        private ObjectSet<SysRoleToRights> _sysRoleToRights;
    
        public ObjectSet<SysRightsMenu> SysRightsMenu
        {
            get { return _sysRightsMenu  ?? (_sysRightsMenu = CreateObjectSet<SysRightsMenu>("SysRightsMenu")); }
        }
        private ObjectSet<SysRightsMenu> _sysRightsMenu;
    
        public ObjectSet<SysMenu> SysMenu
        {
            get { return _sysMenu  ?? (_sysMenu = CreateObjectSet<SysMenu>("SysMenu")); }
        }
        private ObjectSet<SysMenu> _sysMenu;
    
        public ObjectSet<SystemSetting> SystemSetting
        {
            get { return _systemSetting  ?? (_systemSetting = CreateObjectSet<SystemSetting>("SystemSetting")); }
        }
        private ObjectSet<SystemSetting> _systemSetting;

        #endregion
    }
}
